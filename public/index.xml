<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on A First Course in R</title>
    <link>https://a-first-r-course.netlify.app/</link>
    <description>Recent content in Home on A First Course in R</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://a-first-r-course.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://a-first-r-course.netlify.app/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/posts/creating-a-new-theme/</guid>
      <description>Introduction #  This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://a-first-r-course.netlify.app/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static #  Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://a-first-r-course.netlify.app/posts/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/posts/2020-12-01-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://a-first-r-course.netlify.app/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://a-first-r-course.netlify.app/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo #  Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs #  Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description>
    </item>
    
    <item>
      <title>Beamer</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/egBeamer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/egBeamer/</guid>
      <description>Beamer #  Beamer is extremely customisable, but you need to know some LaTeX!
Or you can just learn the two or three commands necessary to make some cool slides!
x &amp;lt;- &amp;#34;Beamer uses LaTeX to look awesome!&amp;#34; print(x) ## [1] &amp;quot;Beamer uses LaTeX to look awesome!&amp;quot; </description>
    </item>
    
    <item>
      <title>My Report</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/Example/OurFirstRmd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/Example/OurFirstRmd/</guid>
      <description>My First Report #  I&amp;rsquo;m using R Markdown for the first time, and I&amp;rsquo;m writing my own report!
Including code #  Parabola code #  Look at all the cool code I can include in R Markdown!
text &amp;lt;- &amp;#34;R Markdown is cool&amp;#34; print(text) ## [1] &amp;quot;R Markdown is cool&amp;quot; x = seq(-5,5,0.1) y = x^2 plot(x,y) Figure 1: A nice parabola!
 How much I love using R Markdown #  Loads!</description>
    </item>
    
    <item>
      <title>R Markdown</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/RMarkdown.utf8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/RMarkdown.utf8/</guid>
      <description>The Bigger Picture #  In this document we learn how to create and manipulate R Markdown documents. Simply put, we are learning how to create documents, slideshows, websites and reports to produce and communicate the visualisations created earlier on. In the overall context of the workflow, this falls into the category of producing our presentations.
 \  What is R Markdown? #    Lynda 1.1
   Lynda 1.</description>
    </item>
    
    <item>
      <title>Slidy</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/egSlidy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/egSlidy/</guid>
      <description>Slidy #  This is how Slidy can look with some custom css!
x &amp;lt;- &amp;#34;Wow, what a cool theme!&amp;#34; print(x) ## [1] &amp;quot;Wow, what a cool theme!&amp;quot; </description>
    </item>
    
    <item>
      <title>The R Logo</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/RMarkdown/test/</guid>
      <description>Parabola #  text &amp;lt;- &amp;#34;R Markdown is cool&amp;#34; print(text) ## [1] &amp;quot;R Markdown is cool&amp;quot; x = seq(-5,5,0.1) y = x^2 plot(x,y) load(&amp;#34;tidy_EnvAcc_data/consumption.rdata&amp;#34;) library(&amp;#34;tidyverse&amp;#34;) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.4 ✓ dplyr 1.0.2 ## ✓ tidyr 1.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() Figure 1: *A nice parabola.</description>
    </item>
    
    <item>
      <title>Untitled</title>
      <link>https://a-first-r-course.netlify.app/docs/communicate/htmlwidgets-in-documents/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a-first-r-course.netlify.app/docs/communicate/htmlwidgets-in-documents/test/</guid>
      <description>#Test
 </description>
    </item>
    
  </channel>
</rss>
